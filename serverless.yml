service:
  name: q-and-a-backend

custom:
  dynamodb-offline-port: 8000
  dynamodb:
    stages:
      - dev
    start:
      port: ${self:custom.dynamodb-offline-port}
      dbPath: db/
      migrate: true
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
    packager: 'npm'
  serverless-offline:
    useChildProcesses: true
  middleware:
    pre:
      - src/middleware/source-map.noop
    pos:
      - catch: src/middleware/error-handler.errorHandler

plugins:
  - serverless-dotenv-plugin
  - serverless-middleware
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

resources:
  - ${file(./resources/dynamodb-meetings-table.yml)}
  - ${file(./resources/dynamodb-questions-table.yml)}

provider:
  name: aws
  runtime: nodejs12.x
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
  logs:
    restApi: true

functions:
  # Meeting endpoints
  getMeeting:
    handler:
      - src/meeting/schema.getMeetingValidator
      - src/meeting/controller.getMeeting
    events:
      - http:
          method: get
          path: meetings/{id}
          cors: true
  createMeeting:
    handler:
      - src/meeting/schema.createMeetingValidator
      - src/meeting/controller.createMeeting
    events:
      - http:
          method: post
          path: meetings
          cors: true
  deleteMeeting:
    handler:
      - src/meeting/schema.deleteMeetingValidator
      - src/meeting/controller.deleteMeeting
    events:
      - http:
          method: delete
          path: meetings/{id}
          cors: true
  updateMeeting:
    handler:
      - src/meeting/schema.updateMeetingValidator
      - src/meeting/controller.updateMeeting
    events:
      - http:
          method: patch
          path: meetings/{id}
          cors: true
  getQuestionsOfMeeting:
    handler:
      - src/meeting/schema.getQuestionsOfMeetingValidator
      - src/meeting/controller.getQuestionsOfMeeting
    events:
      - http:
          method: get
          path: meetings/{id}/questions
          cors: true
  # Question endpoints
  createQuestion:
    handler:
      - src/question/schema.createQuestionValidator
      - src/question/controller.createQuestion
    events:
      - http:
          method: post
          path: questions
          cors: true
